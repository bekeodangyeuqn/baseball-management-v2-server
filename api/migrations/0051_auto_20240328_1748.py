# Generated by Django 3.2.20 on 2024-03-28 10:48

import datetime
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0050_auto_20240323_2042'),
    ]

    operations = [
        migrations.CreateModel(
            name='PitchByPitch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teamScore', models.IntegerField(blank=True, default=0, null=True)),
                ('oppScore', models.IntegerField(blank=True, default=0, null=True)),
                ('out', models.IntegerField(blank=True, default=0, null=True)),
                ('inning', models.IntegerField(blank=True, default=1, null=True)),
                ('isTop', models.BooleanField(blank=True, default=True, null=True)),
                ('ball', models.IntegerField(blank=True, default=0, null=True)),
                ('strike', models.IntegerField(blank=True, default=0, null=True)),
                ('isOffense', models.IntegerField(blank=True, default=0, null=True)),
                ('currentPlayer', models.IntegerField(blank=True, default=1, null=True)),
                ('oppCurPlayer', models.IntegerField(blank=True, default=1, null=True)),
                ('outcomeType', models.IntegerField(blank=True, choices=[(1, 'Strikeout Looking'), (2, 'Strikeout Swinging'), (3, 'Groundout'), (4, 'Pop/Flyout'), (5, 'Sacrifice Fly'), (6, 'Sacrifice Bunt'), (7, 'Infield Fly'), (8, 'Dropped 3rd strike'), (9, 'Ground into Double Play'), (10, 'Ground into Triple Play'), (11, 'Walk'), (12, 'Intentional Walk'), (13, 'Single'), (14, 'Double'), (15, 'Triple'), (16, 'Homerun'), (17, 'Inside park Homerun'), (18, 'Error'), (19, 'Hit by pitch'), (20, 'Fielder choice'), (21, 'Catcher interference'), (22, 'Fly into Double Play'), (23, 'Fly into Triple Play')], default=1)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plateApperance', models.IntegerField(blank=True, default=0, null=True)),
                ('battingOrder', models.IntegerField(blank=True, default=0, null=True)),
                ('runBattedIn', models.IntegerField(blank=True, default=0, null=True)),
                ('single', models.IntegerField(blank=True, default=0, null=True)),
                ('double', models.IntegerField(blank=True, default=0, null=True)),
                ('triple', models.IntegerField(blank=True, default=0, null=True)),
                ('homeRun', models.IntegerField(blank=True, default=0, null=True)),
                ('baseOnBall', models.IntegerField(blank=True, default=0, null=True)),
                ('intentionalBB', models.IntegerField(blank=True, default=0, null=True)),
                ('hitByPitch', models.IntegerField(blank=True, default=0, null=True)),
                ('strikeOut', models.IntegerField(blank=True, default=0, null=True)),
                ('fielderChoice', models.IntegerField(blank=True, default=0, null=True)),
                ('sacrificeFly', models.IntegerField(blank=True, default=0, null=True)),
                ('sacrificeBunt', models.IntegerField(blank=True, default=0, null=True)),
                ('stolenBase', models.IntegerField(blank=True, default=0, null=True)),
                ('leftOnBase', models.IntegerField(blank=True, default=0, null=True)),
                ('doublePlay', models.IntegerField(blank=True, default=0, null=True)),
                ('triplePlay', models.IntegerField(blank=True, default=0, null=True)),
                ('run', models.IntegerField(blank=True, default=0, null=True)),
                ('onBaseByError', models.IntegerField(blank=True, default=0, null=True)),
                ('currentPos', models.IntegerField(blank=True, choices=[(1, 'Picther'), (2, 'Catcher'), (3, 'First baseman'), (4, 'Second baseman'), (5, 'Third baseman'), (6, 'Shortstop'), (7, 'Outfielder'), (0, 'Desinated Hitter'), (-1, 'Not position')], default=-1)),
                ('playedPos', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, choices=[(1, 'Picther'), (2, 'Catcher'), (3, 'First baseman'), (4, 'Second baseman'), (5, 'Third baseman'), (6, 'Shortstop'), (7, 'Outfielder'), (0, 'Desinated Hitter'), (-1, 'Not position')], default=-1), size=None)),
                ('putOut', models.IntegerField(blank=True, default=0, null=True)),
                ('assist', models.IntegerField(blank=True, default=0, null=True)),
                ('error', models.IntegerField(blank=True, default=0, null=True)),
                ('outfieldAssist', models.IntegerField(blank=True, default=0, null=True)),
                ('pitchBall', models.IntegerField(blank=True, default=0, null=True)),
                ('pictchStrike', models.IntegerField(blank=True, default=0, null=True)),
                ('totalBatterFaced', models.IntegerField(blank=0, default=0, null=True)),
                ('totalInGameOut', models.IntegerField(blank=True, default=0, null=True)),
                ('oppHit', models.IntegerField(blank=True, default=0, null=True)),
                ('oppRun', models.IntegerField(blank=True, default=0, null=True)),
                ('earnedRun', models.IntegerField(blank=True, default=0, null=True)),
                ('oppBaseOnBall', models.IntegerField(blank=True, default=0, null=True)),
                ('oppStrikeout', models.IntegerField(blank=True, default=0, null=True)),
                ('hitBatter', models.IntegerField(blank=True, default=0, null=True)),
                ('balk', models.IntegerField(blank=True, default=0, null=True)),
                ('wildPitch', models.IntegerField(blank=True, default=0, null=True)),
                ('oppHomeRun', models.IntegerField(blank=True, default=0, null=True)),
                ('firstPitchStrike', models.IntegerField(blank=True, default=0, null=True)),
                ('pickOff', models.IntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='defensepitchbypitch',
            name='game',
        ),
        migrations.RemoveField(
            model_name='defensepitchbypitch',
            name='pitcher',
        ),
        migrations.RemoveField(
            model_name='fieldergame',
            name='game',
        ),
        migrations.RemoveField(
            model_name='fieldergame',
            name='player',
        ),
        migrations.RemoveField(
            model_name='offensepitchbypitch',
            name='batter',
        ),
        migrations.RemoveField(
            model_name='offensepitchbypitch',
            name='game',
        ),
        migrations.RemoveField(
            model_name='pitchergame',
            name='game',
        ),
        migrations.RemoveField(
            model_name='pitchergame',
            name='player',
        ),
        migrations.AlterField(
            model_name='event',
            name='timeStart',
            field=models.DateTimeField(default=datetime.datetime(2024, 3, 28, 17, 48, 5, 389131)),
        ),
        migrations.AlterField(
            model_name='game',
            name='timeStart',
            field=models.DateTimeField(default=datetime.datetime(2024, 3, 28, 17, 48, 5, 389131)),
        ),
        migrations.AlterField(
            model_name='practice',
            name='timeStart',
            field=models.DateTimeField(default=datetime.datetime(2024, 3, 28, 17, 48, 5, 389131)),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='time',
            field=models.DateTimeField(default=datetime.datetime(2024, 3, 28, 17, 48, 5, 389131)),
        ),
        migrations.DeleteModel(
            name='BatterGame',
        ),
        migrations.DeleteModel(
            name='DefensePitchByPitch',
        ),
        migrations.DeleteModel(
            name='FielderGame',
        ),
        migrations.DeleteModel(
            name='OffensePitchByPitch',
        ),
        migrations.DeleteModel(
            name='PitcherGame',
        ),
        migrations.AddField(
            model_name='playergame',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.game'),
        ),
        migrations.AddField(
            model_name='playergame',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.player'),
        ),
        migrations.AddField(
            model_name='pitchbypitch',
            name='currentPitcher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_pitcher', to='api.playergame'),
        ),
        migrations.AddField(
            model_name='pitchbypitch',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.game'),
        ),
        migrations.AddField(
            model_name='pitchbypitch',
            name='isRunnerFirst',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runner_first', to='api.playergame'),
        ),
        migrations.AddField(
            model_name='pitchbypitch',
            name='isRunnerSecond',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runner_second', to='api.playergame'),
        ),
        migrations.AddField(
            model_name='pitchbypitch',
            name='isRunnerThird',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runner_third', to='api.playergame'),
        ),
    ]
